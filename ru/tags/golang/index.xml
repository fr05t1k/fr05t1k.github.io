<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on /etc/notes</title>
    <link>https://etcnotes.com/ru/tags/golang/</link>
    <description>Recent content in Golang on /etc/notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/3.0/&#34;&gt;Все права защищены&lt;/a&gt;, 2019</copyright>
    <lastBuildDate>Sat, 21 Sep 2019 00:00:00 +0300</lastBuildDate>
    
	<atom:link href="https://etcnotes.com/ru/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PPROF. Профайлинг Goalng приложений.</title>
      <link>https://etcnotes.com/ru/posts/pprof/</link>
      <pubDate>Sat, 21 Sep 2019 00:00:00 +0300</pubDate>
      
      <guid>https://etcnotes.com/ru/posts/pprof/</guid>
      <description>Установка Go Tools содержат набор отличных инструментов прямо из коробки. Сегодня мы поговорим об одном из низ. Pprof - встроеный инструмент для профилирования приложений. Есть несколько способов его использования. Мы рассмотрим самый простой.
Исходный код примера вы можете найти здесь
Для начала нам нужно подключить стандарные http обработчики:
import ( _ &amp;quot;net/http/pprof&amp;quot; )  Если вы не используете http в своем приложнии, вы можете запустить http отдельно:
package main import ( &amp;quot;net/http&amp;quot; _ &amp;quot;net/http/pprof&amp;quot; ) func main () { http.</description>
    </item>
    
  </channel>
</rss>