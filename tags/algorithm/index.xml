<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on /etc/notes</title>
    <link>https://etcnotes.com/tags/algorithm/</link>
    <description>Recent content in Algorithm on /etc/notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/3.0/&#34;&gt;All rights reserved&lt;/a&gt;, 2019</copyright>
    <lastBuildDate>Sun, 27 Jan 2019 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://etcnotes.com/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SSTable and LSM-trees. How to store Key-Value storage on the disk?</title>
      <link>https://etcnotes.com/posts/sstable-and-lsm/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0200</pubDate>
      
      <guid>https://etcnotes.com/posts/sstable-and-lsm/</guid>
      <description>Hash Table What is Key-Value storage? First, you could think about Dictionary and Hash-Map depends what is your favorite programming language. So our first implementation will be Hash-index. Hash-Map good fit into memory. What about data storage? Let&amp;rsquo;s say our storage is an opened file where we can write in append mode. Then we can use Hash-Map values as an offset in the file when we insert or update a new value.</description>
    </item>
    
    <item>
      <title>Python Cheat Sheet</title>
      <link>https://etcnotes.com/posts/python/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0200</pubDate>
      
      <guid>https://etcnotes.com/posts/python/</guid>
      <description>Basic operations &amp;gt;&amp;gt;&amp;gt; 3 / 2 1.5 &amp;gt;&amp;gt;&amp;gt; 3 // 2 1 &amp;gt;&amp;gt;&amp;gt; 3 ** 2 9 &amp;gt;&amp;gt;&amp;gt; abs(-1) 1  Basic Data Structures List Ordered Changable Duplicates  &amp;gt;&amp;gt;&amp;gt; list = [] &amp;gt;&amp;gt;&amp;gt; list = [i:j] # returns list subset &amp;gt;&amp;gt;&amp;gt; list = [-1] # returns last element &amp;gt;&amp;gt;&amp;gt; list[i] = val &amp;gt;&amp;gt;&amp;gt; list[i:j] = otherlist # replace ith to jth element with otherlist &amp;gt;&amp;gt;&amp;gt; del list[i:j] &amp;gt;&amp;gt;&amp;gt; list.</description>
    </item>
    
  </channel>
</rss>