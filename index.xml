<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>/etc/notes</title>
    <link>https://etcnotes.com/</link>
    <description>Recent content on /etc/notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/3.0/&#34;&gt;All rights reserved&lt;/a&gt;, 2019</copyright>
    <lastBuildDate>Sat, 21 Sep 2019 00:00:00 +0300</lastBuildDate>
    
	<atom:link href="https://etcnotes.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PPROF. Profiling Golang Applications.</title>
      <link>https://etcnotes.com/posts/pprof/</link>
      <pubDate>Sat, 21 Sep 2019 00:00:00 +0300</pubDate>
      
      <guid>https://etcnotes.com/posts/pprof/</guid>
      <description>Setup Go Tools provide quite a lot of built-in instruments out of the box. Today we&amp;rsquo;re going to talk about one of them. Pprof - a built-in profiling tool. There are several ways how to use it. We will check the easiest one.
Check the full code example here.
First of all, we need to import default pprof http endpoints:
import ( _ &amp;quot;net/http/pprof&amp;quot; )  If you don&amp;rsquo;t use http in your application you can just run it standalone:</description>
    </item>
    
    <item>
      <title>MySQL client out as CSV</title>
      <link>https://etcnotes.com/posts/mysql2csv/</link>
      <pubDate>Fri, 28 Jun 2019 00:00:00 +0300</pubDate>
      
      <guid>https://etcnotes.com/posts/mysql2csv/</guid>
      <description>If you need to convert mysql-client output as CSV here is a recipe
alias mysql2csv=&#39;sed &#39;\&#39;&#39;s/\,/\\,/g;s/\&amp;quot;/\\&amp;quot;/g;s/\t/&amp;quot;,&amp;quot;/g;s/^/&amp;quot;/;s/$/&amp;quot;/;s/\n//g&#39;\&#39;&#39;&#39; mytsql -e &amp;quot;select * from users&amp;quot; | mysql2csv  </description>
    </item>
    
    <item>
      <title>How to optimize aggregate queries in Clickhouse?</title>
      <link>https://etcnotes.com/posts/materialized-view-and-aggregating-merge-tree/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0300</pubDate>
      
      <guid>https://etcnotes.com/posts/materialized-view-and-aggregating-merge-tree/</guid>
      <description>Overview Clickhouse is quite fast storage, but when your storage is huge enough searching and aggregating in raw data become quite expensive. In this case you would think about optimization some queries. Today I would like to talk about a way where we will use AggregatingMergeTree with Materialized View. Materialized View gets all data by a given query and AggregatingMergeTree aggregates inserted records by sorting key. With this approach, We can group data by some fields and it helps us optimize heavy queries for a long period.</description>
    </item>
    
    <item>
      <title>Site Reliability Engineering: Measuring and Managing Reliability (part 2)</title>
      <link>https://etcnotes.com/posts/sre-2/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0200</pubDate>
      
      <guid>https://etcnotes.com/posts/sre-2/</guid>
      <description>Read Part 1: link
Properties of good SLI metrics In this section, we will talk about how to choose good metrics(SLI). First of all, let&amp;rsquo;s think about our target. We need to make our users are happy. Good SLI should have some characteristics:
 predictable relationship with user happiness shows service is working as users expect to expressed as: good events / valid events aggregated over a long time horizon  How do you think why the upper metric is bad?</description>
    </item>
    
    <item>
      <title>SSTable and LSM-trees. How to store Key-Value storage on the disk?</title>
      <link>https://etcnotes.com/posts/sstable-and-lsm/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0200</pubDate>
      
      <guid>https://etcnotes.com/posts/sstable-and-lsm/</guid>
      <description>Hash Table What is Key-Value storage? First, you could think about Dictionary and Hash-Map depends what is your favorite programming language. So our first implementation will be Hash-index. Hash-Map good fit into memory. What about data storage? Let&amp;rsquo;s say our storage is an opened file where we can write in append mode. Then we can use Hash-Map values as an offset in the file when we insert or update a new value.</description>
    </item>
    
    <item>
      <title>Site Reliability Engineering: Measuring and Managing Reliability (part 1)</title>
      <link>https://etcnotes.com/posts/sre/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0200</pubDate>
      
      <guid>https://etcnotes.com/posts/sre/</guid>
      <description>DevOps vs SRE The definition of SRE (Site Reliability Engineering) sounds like DevOps, but if we consider DevOps as a philosophy, then SRE is a concrete the implementation of this philosophy.
DevOps is broken into 5 key areas:
 Reduce Organization Silos Accept Failure as Normal Implement Gradual Change Leverage Tooling and Automation Measure Everything  Let&amp;rsquo;s imagine that these pillars are an interface for a class. Then implementation of SRE are:</description>
    </item>
    
    <item>
      <title>How To Trace Your System Calls On Mac OS</title>
      <link>https://etcnotes.com/posts/system-call/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0200</pubDate>
      
      <guid>https://etcnotes.com/posts/system-call/</guid>
      <description>DTruss DTruss is analog of strace in linux and uses DTrase for it. It allows you to trace system calls from a running process or run a process with tracing.
Note But from past versions of Mac OS, some paths are protected by SIP(System Integrity Protection) (i.e. /usr/bin) and cannot be traced. But there is a workaround, to change settings in recovery mode but I would not recommend it to you.</description>
    </item>
    
    <item>
      <title>Python Cheat Sheet</title>
      <link>https://etcnotes.com/posts/python/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0200</pubDate>
      
      <guid>https://etcnotes.com/posts/python/</guid>
      <description>Basic operations &amp;gt;&amp;gt;&amp;gt; 3 / 2 1.5 &amp;gt;&amp;gt;&amp;gt; 3 // 2 1 &amp;gt;&amp;gt;&amp;gt; 3 ** 2 9 &amp;gt;&amp;gt;&amp;gt; abs(-1) 1  Basic Data Structures List Ordered Changable Duplicates  &amp;gt;&amp;gt;&amp;gt; list = [] &amp;gt;&amp;gt;&amp;gt; list = [i:j] # returns list subset &amp;gt;&amp;gt;&amp;gt; list = [-1] # returns last element &amp;gt;&amp;gt;&amp;gt; list[i] = val &amp;gt;&amp;gt;&amp;gt; list[i:j] = otherlist # replace ith to jth element with otherlist &amp;gt;&amp;gt;&amp;gt; del list[i:j] &amp;gt;&amp;gt;&amp;gt; list.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://etcnotes.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://etcnotes.com/about/</guid>
      <description>Hi there My name is Stas and I am a software developer.
I am going to share my daily routines. By the way, It helps me to better remember information when I explain it to someone. Probably you will find some articles useful for your case.
I would like to sorry about my English in advance. It&amp;rsquo;s not my native language :)
My Contacts:
 LinkedIn GitHub Email  So, there you have it&amp;hellip; enjoy!</description>
    </item>
    
  </channel>
</rss>